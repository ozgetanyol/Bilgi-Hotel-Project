<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        W+9zmwAAAABJRU5ErkJggg==
</value>
  </data>
</root>