<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wE+irZX8djOpgAAAABJRU5ErkJggg==
</value>
  </data>
</root>